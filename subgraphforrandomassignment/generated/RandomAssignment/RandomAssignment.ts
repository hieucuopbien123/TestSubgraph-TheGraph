// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Assign extends ethereum.Event {
  get params(): Assign__Params {
    return new Assign__Params(this);
  }
}

export class Assign__Params {
  _event: Assign;

  constructor(event: Assign) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RandomAssignment extends ethereum.SmartContract {
  static bind(address: Address): RandomAssignment {
    return new RandomAssignment("RandomAssignment", address);
  }

  valueOf(param0: Address): BigInt {
    let result = super.call("valueOf", "valueOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_valueOf(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("valueOf", "valueOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AssignValueForCall extends ethereum.Call {
  get inputs(): AssignValueForCall__Inputs {
    return new AssignValueForCall__Inputs(this);
  }

  get outputs(): AssignValueForCall__Outputs {
    return new AssignValueForCall__Outputs(this);
  }
}

export class AssignValueForCall__Inputs {
  _call: AssignValueForCall;

  constructor(call: AssignValueForCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AssignValueForCall__Outputs {
  _call: AssignValueForCall;

  constructor(call: AssignValueForCall) {
    this._call = call;
  }
}
